% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processing.R
\name{gw_emittors}
\alias{gw_emittors}
\title{Geographically weighted emittors with a spatial extent}
\usage{
gw_emittors(
  input,
  target,
  clip,
  wfun = c("gaussian", "exponential", "tricube", "epanechnikov"),
  bw = 1000,
  weight = NULL,
  dist_method = c("euclidean", "geodesic")
)
}
\arguments{
\item{input}{sf}

\item{target}{sf}

\item{clip}{sf st_POLYGON}

\item{wfun}{character}

\item{bw}{numeric}

\item{weight}{numeric}

\item{dist_method}{character}
}
\value{
A data.frame with weighted emissions for each input point
}
\description{
This function takes three mandatory inputs: input points,
emittor points, and a spatial polygon to delimit the emittors
inside of it. From each input point, all the emittor points
are firstly subsetted by the spatial polygon, and the clipped
emittors are spatially weighted depending on the Euclidean or
geodesic distance from the focal point with optional arguments
for the weighting function (default: Gaussian; with options for
exponential, tricube, epanechnikov) and optional weights to add
more weights for the emission factor with respect to each emittor's
classification.
}
\examples{
library(sf)
library(dplyr)

# Example input points (monitoring stations)
input <- st_as_sf(data.frame(
  id = 1:3,
  lon = c(126.9780, 127.0010, 126.9900),
  lat = c(37.5665, 37.5700, 37.5800)
), coords = c("lon", "lat"), crs = 4326) \%>\%
  st_transform(5179)

# Example target points (emittor locations with emissions)
target <- st_as_sf(data.frame(
  id = 1:5,
  lon = c(126.9800, 127.0020, 126.9950, 127.0100, 126.9850),
  lat = c(37.5650, 37.5680, 37.5750, 37.5720, 37.5780),
  emission = c(100, 150, 200, 250, 300)
), coords = c("lon", "lat"), crs = 4326) \%>\%
  st_transform(5179) \%>\%
  mutate(emission = emission)

# Example clipping polygon (a simple square around the input points)
clip <- st_as_sf(data.frame(
  id = 1,
  geometry = st_sfc(st_polygon(list(rbind(
    c(126.9750, 37.5600),
    c(127.0150, 37.5600),
    c(127.0150, 37.5850),
    c(126.9750, 37.5850),
    c(126.9750, 37.5600)
  ))))
), crs = 4326) \%>\%
  st_transform(5179)

# Calculate geographically weighted emissions
result <- purrr::map(seq_len(nrow(input)), \(x) gw_emittors(
  input = input[x, ],
  target = target,
  clip = clip,
  wfun = "gaussian",
  bw = 1000,
  dist_method = "geodesic"
)) |>
purrr::list_rbind()
print(result)
}
